# ansible_path/group_vars/portainer.yaml

dockerServiceStandaloneNetwork: 'reverse-proxy-nw'
# dockerServicePortainerNetwork: 'portainer_default'
dockerServiceDefaultNetwork:
  {
    name: 'default-nw',
    ipam_config:
      [{ subnet: '192.168.10.0/24', gateway: '192.168.10.1', iprange: '192.168.10.0/26' }]
  }

# Docker Portainer Server service
dockerServicePortainerServerContainerName: 'portainer-server-{{ inventory_hostname }}'
dockerServicePortainerServerImage: 'portainer/portainer-ce:alpine-sts'
dockerServicePortainerServerEnvVars: { TZ: 'Europe/Paris', AGENT_SECRET: 'portainer' }
dockerServicePortainerServerPorts: ['9443:9443', '8000:8000']
dockerServicePortainerServerNetworks:
  [
    { name: '{{ dockerServiceDefaultNetwork.name }}' },
    { name: '{{ dockerServiceStandaloneNetwork }}' }
  ]
dockerServicePortainerServerVolumes:
  [
    '/var/run/docker.sock:/var/run/docker.sock',
    '/srv/portainer/data:/data',
    '/etc/localtime:/etc/localtime:ro',
    '/etc/timezone:/etc/timezone:ro'
  ]

# Docker service Portainer
dockerServicePortainerContainerName: 'portainer-agent-{{ inventory_hostname }}'
dockerServicePortainerImage: 'portainer/agent:alpine-sts'
dockerServicePortainerPorts: '9001:9001'
dockerServicePortainerCommand: '-H tcp://{{ inventory_hostname }}.lgdweb.ovh:9001 --tlsskipverify'
dockerServicePortainerNetworks: [{ name: '{{ dockerServiceDefaultNetwork.name }}' }]
dockerServicePortainerEnvVars: { TZ: 'Europe/Paris', AGENT_SECRET: 'portainer' }
dockerServicePortainerVolumes:
  [
    '/var/run/docker.sock:/var/run/docker.sock',
    '/var/lib/docker/volumes:/var/lib/docker/volumes',
    '/etc/localtime:/etc/localtime:ro',
    '/etc/timezone:/etc/timezone:ro'
  ]

dockerServicePortainerAgentFirewallPorts: [{ port: 9001, proto: 'tcp' }]

# Docker service Nginx Proxy Manager
dockerServiceProxyContainerName: 'nginx-proxy-manager-{{ inventory_hostname }}'
dockerServiceProxyImage: 'jc21/nginx-proxy-manager:2'
dockerServiceProxyPorts: ['80:80', '443:443', '81:81']
dockerServiceProxyEnvVars: { TZ: 'Europe/Paris' }
dockerServiceProxyNetworks:
  [
    { name: '{{ dockerServiceStandaloneNetwork }}' },
    { name: '{{ dockerServiceDefaultNetwork.name }}' }
  ]
dockerServiceProxyVolumes:
  [
    '/srv/nginx-proxy-manager/data:/data',
    '/srv/logs/nginx-proxy-manager:/data/logs/',
    '/srv/nginx-proxy-manager/data/letsencrypt:/etc/letsencrypt'
  ]

# Docker service Main Site
dockerServiceMainSiteContainerName: 'main-site-{{ inventory_hostname }}'
dockerServiceMainSiteImage: 'lgdweb/nginx-test:latest'
dockerServiceMainSiteNetworks:
  [
    { name: '{{ dockerServiceStandaloneNetwork }}' },
    { name: '{{ dockerServiceDefaultNetwork.name }}' }
  ]
dockerServiceMainSiteVolumes:
  [
    '/srv/logs/nginx:/var/log/nginx',
    '/etc/localtime:/etc/localtime:ro',
    '/etc/timezone:/etc/timezone:ro'
  ]
